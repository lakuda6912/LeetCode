class Solution:
    def maximalSquare(self, matrix: List[List[str]]) -> int:
        m, n = len(matrix), len(matrix[0])
        dp = [[-1]*n for _ in range(m)]
        def dfs(i,j):
            if i == -1 or j == -1:
                return 0

            if dp[i][j] != -1:
                return dp[i][j]    

            dp[i][j] = float('inf')
            if matrix[i][j] == '1':
                dp[i][j] = min(dp[i][j], dfs(i-1,j), dfs(i,j-1), dfs(i-1,j-1)) + 1
            else:
                dp[i][j] = 0    
            return dp[i][j]

        maxArea = 0
        for i in range(m):
            for j in range(n):
                maxArea = max(maxArea, dfs(i,j))

        return maxArea * maxArea



