# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if k == 0 or not head or not head.next: return head

        count, temp = 1, head
        while temp.next:
            temp = temp.next
            count += 1
        k = k % count
        #print(count, k)
        if k == 0: return head

        i, fast, slow = 0, head, head
        while i < k and fast:
            fast = fast.next
            i += 1
        #print(fast)    

        if fast:
            while fast.next:
                fast = fast.next
                slow = slow.next
            temp = slow.next
            slow.next = None
            fast.next = head
            head = temp
        return head
