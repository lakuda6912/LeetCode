#include <stdio.h>
#define MIN(a,b) (((a)<(b))?(a):(b))

int minPathSum(int** grid, int gridSize, int* gridColSize){

int m = gridSize;
int n = *gridColSize;
fprintf(stdout,"m=%d n=%d\n",m,n);

int** dp = calloc((m+1), sizeof(int*));
for (int i=0; i<m+1; i++)
 dp[i] = calloc(n+1, sizeof(int));

for (int i=0; i<n+1; i++)
 dp[m][i] = 1000;
for (int i=0; i<m+1; i++)
 dp[i][n] = 1000;
dp[m-1][n-1] = 1;
dp[m][n-1] = 0;


for (int r=m-1; r>=0; r--)
{
 for (int c=n-1; c>=0; c--)
 {
   dp[r][c] = MIN(dp[r][c+1], dp[r+1][c]) + grid[r][c];
 }
} 

/*
for (int r=0; r<m+1; r++)
{
 for (int c=0; c<n+1; c++)
 {
   fprintf(stdout,"%d ",dp[r][c]);
 }
 fprintf(stdout,"\n");
} 
*/

return dp[0][0];
}