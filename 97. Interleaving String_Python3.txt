class Solution:
    def isInterleave(self, s1: str, s2: str, s3: str) -> bool:
        def dfs(i,j):
            #print(i,j)
            if i == m and j == n:
                return True
            if dp[i][j] != -1:
                return dp[i][j]

            dp[i][j] = False
            if i < m and i+j < l and s1[i] == s3[i+j]:
                dp[i][j] = dp[i][j] or dfs(i+1,j)
            if j < n and i+j < l and s2[j] == s3[i+j]:
                dp[i][j] = dp[i][j] or dfs(i,j+1)
            return dp[i][j]    

        m, n, l = len(s1), len(s2), len(s3)
        if m + n != l: return False

        dp = [[-1] * (n+1) for _ in range(m+1)]

        return dfs(0,0)