class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        col, posCol, negCol = set(), set(), set()
        res = []
        board = [["."] * n for _ in range(n)]
        def dfs(r):
            if r == n:
                copy = ["".join(row) for row in board]
                res.append(copy)
                return 
            for c in range(n):
                if c in col or (r+c) in posCol or (r-c) in negCol:
                    continue
                board[r][c] = "Q"    
                col.add(c)
                posCol.add(r+c)
                negCol.add(r-c)
                dfs(r+1)
                board[r][c] = "."    
                col.remove(c)
                posCol.remove(r+c)
                negCol.remove(r-c)

        dfs(0)
        return res
        