class Solution(object):
    def minDistance(self, word1, word2):
        """
        :type word1: str
        :type word2: str
        :rtype: int
        """
        m = len(word1)
        n = len(word2)
        dp =[[-1 for i in range(n+1)] for i in range(m+1)]
        #print(dp)
        
        for i in range(m+1):
            dp[i][n] = m-i
        for i in range(n+1):
            dp[m][i] = n-i
        for i in reversed(range(m)):
            #print(i)
            for j in reversed(range(n)):
                if (word1[i] == word2[j]):
                    dp[i][j] = dp[i+1][j+1]
                else:
                    dp[i][j] = 1 + min(dp[i+1][j], dp[i][j+1], dp[i+1][j+1])

        return dp[0][0]
        