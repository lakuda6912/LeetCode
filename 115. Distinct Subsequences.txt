class Solution:
    def numDistinct(self, s: str, t: str) -> int:
        #@cache
        #def dfs(i, j):
        #    if j < 0:
        #        return 1
        #    if i < 0:
        #        return 0
        #    if s[i] == t[j]:
        #        return dfs(i-1,j-1) + dfs(i-1,j)
        #    else:
        #        return dfs(i-1,j)
        #return dfs(len(s)-1, len(t)-1)

        @cache
        def dfs(i, j):
            if j == len(t):
                return 1
            if i == len(s):
                return 0
            take, noTake = 0, 0
            if s[i] == t[j]:
                #print(i,j)
                take = dfs(i+1, j+1)
            noTake = dfs(i+1, j)
            return take + noTake
        #print('len = ',len(s),len(t))    
        return dfs(0, 0)          




