class Solution:
    def closedIsland(self, grid: List[List[int]]) -> int:
        def dfs(i,j,mark):
            grid[i][j] = mark
            for x, y in (i-1,j),(i+1,j),(i,j-1),(i,j+1):
                if 0 <= x < m and 0 <= y < n and grid[x][y] == 0:
                    dfs(x,y,mark)

        m, n = len(grid), len(grid[0])
        for i in range(m):
            for j in range(n):
                if (i == 0 or i == m-1 or j == 0 or j == n-1) and grid[i][j] == 0:
                    dfs(i,j,1)

        #print(grid)       
        mark = 2
        for i in range(m):
            for j in range(n):
                if grid[i][j] == 0:
                    dfs(i,j,mark)
                    mark += 1    
        #dfs(1,1,2)        
        #print(grid)

        return mark-2                        