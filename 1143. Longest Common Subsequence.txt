class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        m, n = len(text1), len(text2)
        def dfs(i,j):
            if i == m or j == n:
                return 0

            if dp[i][j] != -1:
                return dp[i][j]

            dp[i][j] = 0
            if text1[i] == text2[j]:
                dp[i][j] = max(dp[i][j], dfs(i+1,j+1)) + 1
            else:
                dp[i][j] = max(dp[i][j], dfs(i+1,j), dfs(i,j+1), dfs(i+1,j+1))
            return dp[i][j]

        dp = [[-1]*n for _ in range(m)]
        return dfs(0,0)



        
