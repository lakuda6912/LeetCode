# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def pairSum(self, head: Optional[ListNode]) -> int:
        if not head or not head.next: return None

        slow, fast = head, head.next.next
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        slow = slow.next

        ans = deque()
        temp = head
        while temp != slow:
            ans.appendleft(temp.val)
            temp = temp.next

        temp = slow
        while temp:
            ans.append(ans.popleft() + temp.val)
            temp = temp.next

        return max(ans)