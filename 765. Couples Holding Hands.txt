#include <stdio.h>
#define MIN(a,b) ((a>b)?(b):(a))
int find(int* par, int n)
{
  if (par[n] != n)
   return find(par, par[n]);  

  return n;
}

bool union_(int* rank, int* par, int n1, int n2)
{
    int p1 = find(par, n1);
    int p2 = find(par, n2);

    if (p1 == p2)
     return false;

    if (rank[p1] > rank[p2])
    {
        par[p2] = p1;
        rank[p1] += rank[p2];
    }
    else
    {
        par[p1] = p2;
        rank[p2] += rank[p1]; 
    }
    return true;
}

int minSwapsCouples(int* row, int rowSize){

int m = rowSize/2;
int* par = calloc(m, sizeof(int));
for (int i=0; i<m; i++)
 par[i] = i;
int* rank = calloc(m, sizeof(int));
for (int i=0; i<m; i++)
 rank[i] = 1;

int count = 0;
for (int i=0; i<m; i++)
{
   if (union_(rank,par,row[i*2]/2,row[i*2+1]/2) == true)
   {
       count++;
       //fprintf(stdout,"%d %d %d\n",row[i*2],row[i*2+1],count);
   }
}

return count;
}