class Solution:
    def minimumTotal(self, triangle: List[List[int]]) -> int:
        def dfs(r, c):
            if r == len(triangle):
                return 0
            if dp[r][c] != -1:
                return dp[r][c]    

            ans = float('inf')
            ans = min(ans, triangle[r][c] + min(dfs(r+1,c),dfs(r+1,c+1)))
            dp[r][c] = ans
            return dp[r][c]

        #print(len(triangle))
        #print(dfs(0,0)) 
        dp = [[-1] * len(triangle) for _ in range(len(triangle))]
        #print(dp)
        return dfs(0,0)