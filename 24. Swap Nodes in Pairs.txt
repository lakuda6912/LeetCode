/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
#include <stdio.h>

void logList(struct ListNode* node)
{
    struct ListNode* temp = node;
    while (temp != NULL)
    {
        fprintf(stdout,"%d ",temp->val);
        temp = temp->next;
    }
    fprintf(stdout,"\n");
}

struct ListNode* swapPairs(struct ListNode* head){

if (head == NULL) //0 node
 return NULL;
else if (head->next == NULL) //1 node
 return head;

struct ListNode* node = head->next;
head->next = node->next;
node->next = head;
head = node;

node = node->next;
while(node->next != NULL)
{
    if (node->next != NULL)
    {
        struct ListNode* node1 = node->next;
        if (node->next->next != NULL)
        {
            struct ListNode* node2 = node->next->next;

            node1->next = node2->next;
            node2->next = node1;
            node->next = node2;
        }
        else
         break;
    }
    else
     break;

    node = node->next->next; 
}

return head;
}