#include <stdio.h>
#define MAX(a,b) ((a>b)?(a):(b))

void dfs(char** grid, int m, int n, int r, int c)
{
   if ( (r < 0) || (r > m-1) || (c < 0 ) || (c > n-1) || (grid[r][c] != '1') )
    return;

   grid[r][c] = '0';
   dfs(grid,m,n,r+1,c);
   dfs(grid,m,n,r-1,c);
   dfs(grid,m,n,r,c+1);
   dfs(grid,m,n,r,c-1);
}

int numIslands(char** grid, int gridSize, int* gridColSize){

int m = gridSize;
int n = *gridColSize;

if ((m==1)&&(n==1))
{
    if (grid[0][0] == '0')
     return 0;
    else 
     return 1; 
}

int islands = 0;
for (int i=0; i<m; i++)
{
    for (int j=0; j<n; j++)
    {
        if (grid[i][j] == '1')
        {
            islands++;
            dfs(grid,m,n,i,j);
        }
     }
}

return islands;

}