class Solution:
    def search(self, nums: List[int], target: int) -> int:
        def binarySearch(l, r, pivot):
            while l <= r:
                #print(l,r,pivot)
                mid = l + (r - l) // 2
                if nums[(mid+pivot) % len(nums)] > target:
                    r = mid - 1
                elif nums[(mid+pivot) % len(nums)] < target:
                    l = mid + 1
                else:
                    return (mid+pivot) % len(nums)
            return -1
        pivot = nums.index(min(nums))
        return binarySearch(0, len(nums)-1, pivot)                
        