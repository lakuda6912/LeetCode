#include <stdio.h>
#define MAX(a,b) ((a>b)?(a):(b))
#define MIN(a,b) ((a<b)?(a):(b))

int maxProfit(int* prices, int pricesSize){

int* left = calloc(pricesSize, sizeof(int));
int* right = calloc(pricesSize, sizeof(int));

int minPrice = prices[0];
int maxProfit = 0;
for (int i=0; i<pricesSize; i++)
{
    minPrice = MIN(minPrice, prices[i]);
    maxProfit = MAX(maxProfit, prices[i]-minPrice);
    left[i] = maxProfit;
}

int maxPrice = prices[pricesSize-1];
maxProfit = 0;
for (int i=pricesSize-1; i>=0; i--)
{
    maxPrice = MAX(maxPrice, prices[i]);
    maxProfit = MAX(maxProfit, maxPrice - prices[i]);
    right[i] = maxProfit;
}

maxProfit = 0;
for (int i=0; i<pricesSize; i++)
{
    maxProfit = MAX(maxProfit, left[i]+right[i]);
}

/*
for (int i=0; i<pricesSize; i++)
 fprintf(stdout,"%d ",left[i]);
fprintf(stdout,"\n"); 

for (int i=0; i<pricesSize; i++)
 fprintf(stdout,"%d ",right[i]);
fprintf(stdout,"\n"); 
*/

return maxProfit;
}