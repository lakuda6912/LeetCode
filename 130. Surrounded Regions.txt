#include <stdio.h>

void dfs(char** board, int m, int n, int r, int c)
{
   if ( (r < 0) || (r > m-1) || (c < 0 ) || (c > n-1) || (board[r][c] != 'O') )
    return;

   board[r][c] = 'T';
   dfs(board,m,n,r+1,c);
   dfs(board,m,n,r-1,c);
   dfs(board,m,n,r,c+1);
   dfs(board,m,n,r,c-1);
}

void solve(char** board, int boardSize, int* boardColSize){

int m = boardSize;
int n = *boardColSize;

for (int i=0; i<m; i++)
{
    for (int j=0; j<n; j++)
    {
        if ((i==0) || (i==m-1) || (j==0) || (j==n-1)) 
         dfs(board,m,n,i,j);
    }
}
/*
for (int i=0; i<m; i++)
{
    for (int j=0; j<n; j++)
    {
      fprintf(stdout,"%c ",board[i][j]);
    }
}
fprintf(stdout,"\n");
*/
for (int i=0; i<m; i++)
{
    for (int j=0; j<n; j++)
    {
         if (board[i][j] == 'O')
         board[i][j] = 'X';
    }
}

for (int i=0; i<m; i++)
{
    for (int j=0; j<n; j++)
    {
        if (board[i][j] == 'T')
         board[i][j] = 'O';
    }
}


}