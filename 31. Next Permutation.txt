#include <stdio.h>
void nextPermutation(int* nums, int numsSize){

if (numsSize == 1)
 return nums;

//find the biggest one (pivot) in the desceding sub sequence in the end
int i = numsSize-1;
int temp = -1;
int pivot = 0;
while (i>=0)
{
  if (nums[i] >= temp)
   temp = nums[i];
  else
  {
    pivot = i+1;
    break;
  } 
  i--; 
}
//fprintf(stdout,"nums[%d]=%d\n",pivot,temp);

//rotate the sub sequence
int left = pivot;
int right = numsSize - 1;
while (left < right)
{
  temp = nums[left];
  nums[left] = nums[right];
  nums[right] = temp;
  left++;
  right--;
}
//for (int i=0; i<numsSize; i++)
// fprintf(stdout,"%d ",nums[i]);
//fprintf(stdout,"\n"); 

//find the one to be replaced (pivot1)
temp = 1001;
int pivot1 = pivot - 1;
if (pivot == 0)
 return nums;

for (int i=pivot-1; i<numsSize; i++)
{
  if (nums[i] > nums[pivot-1])
  {
    pivot1 = i;
    temp = nums[i];
    break;
  }
}
//fprintf(stdout,"pivot=%d pivot1=%d\n",pivot, pivot1);

//replacement
temp = nums[pivot-1];
nums[pivot-1] = nums[pivot1];
nums[pivot1] = temp;  
//for (int i=0; i<numsSize; i++)
// fprintf(stdout,"%d ",nums[i]);
//fprintf(stdout,"\n"); 

for (int i=pivot; i<numsSize-1; i++)
{
  if (nums[i] > nums[i+1])
  {
    temp = nums[i];
    nums[i] = nums[i+1];
    nums[i+1] = temp;
  }
}
//for (int i=0; i<numsSize; i++)
// fprintf(stdout,"%d ",nums[i]);
//fprintf(stdout,"\n"); 

return nums;
}