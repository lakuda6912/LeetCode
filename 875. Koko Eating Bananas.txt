class Solution:
    def minEatingSpeed(self, piles: List[int], h: int) -> int:
        def getTime(piles, k):
            res = 0
            for p in piles:
                res += ceil(p/k)
            return res

        if len(piles) == 1:
            return ceil(piles[0] / h)

        l, r = 1, sum(piles)
        while l <= r:
            mid = l + (r - l) // 2
            midTime = getTime(piles, mid)
            print(l,mid,r,midTime)
            if midTime > h: 
                l = mid + 1
            elif midTime < h:
                r = mid - 1
            else:
                break
        #print(l,mid,r,midTime)    
        #return l
        t = l
        while getTime(piles, t) > h:
            #print('check',t,getTime(piles, t))
            t += 1
        #print('check',t,getTime(piles, t))  
        return t 

        
    
                
