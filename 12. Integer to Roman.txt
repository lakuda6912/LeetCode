char * intToRoman(int num){

int div_1000;
int mod_1000;

int div_100;
int mod_100;

int div_10;
int mod_10;

char *result = (char*) malloc(sizeof(char)*20);

int i = 0, j = 0;

div_1000 = num / 1000;
mod_1000 = num % 1000;
if (div_1000 > 0)
{
    for (i=0; i<div_1000; i++)
    {
       result[i] = 'M';
    }//for
}//if
if (mod_1000 >= 900)
{
    result[i++] = 'C';
    result[i++] = 'M';
    mod_1000 -= 900;
}//if
else if (mod_1000 >= 500)
{
    result[i++] = 'D';
    mod_1000 -= 500;
}//else if
else if (mod_1000 >= 400)
{
    result[i++] = 'C';
    result[i++] = 'D';
    mod_1000 -= 400;
}//else if

div_100 = mod_1000 / 100;
mod_100 = mod_1000 % 100;
if (div_100 > 0)
{
    for (j=0; j<div_100; j++)
    {
       result[i++] = 'C';
    }
}//if
if (mod_100 >= 90)
{
    result[i++] = 'X';
    result[i++] = 'C';
    mod_100 -= 90;
}//if
else if (mod_100 >= 50)
{
    result[i++] = 'L';
    mod_100 -= 50;
}//else if
else if (mod_100 >= 40)
{
    result[i++] = 'X';
    result[i++] = 'L';
    mod_100 -= 40;
}//else if

div_10 = mod_100 / 10;
mod_10 = mod_100 % 10;
if (div_10 > 0)
{
    for (j=0; j<div_10; j++)
    {
       result[i++] = 'X';
    }//for
}//if
if (mod_10 >= 9)
{
    result[i++] = 'I';
    result[i++] = 'X';
    mod_10 -= 9;
}//if
else if (mod_10 >= 5)
{
    result[i++] = 'V';
    mod_10 -= 5;
}//else if
else if (mod_10 >= 4)
{
    result[i++] = 'I';
    result[i++] = 'V';
    mod_10 -= 4;
}//else if

if (mod_10 > 0)
{
    for (j=0; j<mod_10; j++)
    {
       result[i] = 'I';
       i++;
    }//for
}//if

result[i] = '\0';
return result;
}